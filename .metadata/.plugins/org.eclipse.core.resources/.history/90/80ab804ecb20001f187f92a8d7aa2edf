package com.ilpbatch4.utility;

public class RectNumericPattern {

	public static void main(String[] args) {
		int num = 4;
		numPattern(num);
	}

	private static void numPattern(int num) {
		int rows = (num*2) - 1;
		int columns = rows;
		int spaces = num;
		int value = rows;
		int count = num;
		int c1 = 1;
		int c2 = 1;
		for(int i = 1; i <= rows; i++)
		{
			spaces = 4;
			if(count > 1) 
			{							//Top Half
				if(i != 1) {						//space
					for(int j = 1; j<c2; j++)	
					{
						System.out.print(spaces);
						spaces = spaces-1;
					}
				}
				for(int j = 1; j <= value; j++)
				{
					System.out.print(count);
				}
				count--;
				value = value-2;
				spaces = spaces + 1;
				if(i != 1) {						//space
					for(int j = 1; j<c2; j++)
					{
						System.out.print(spaces);
						spaces=spaces+1;
					}
				}
				c2++;
				System.out.println("");
			}
			else									//Bottom Half
			{
				if(i!=rows)							//space
				{
					for(int j = 1; j<c2; j++)	
					{
						System.out.print(spaces);
						spaces = spaces-1;
					}
				}
				for(int j = 1; j <= value; j++)
				{
					System.out.print(c1);
				}
				c1++;
				value += 2;
				spaces = spaces + 1;
				if(i != rows) {						//space
					for(int j = 1; j<c2; j++)
					{
						System.out.print(spaces);
						spaces=spaces+1;
					}
				}
				c2--;
				System.out.println("");
			}
		}
		
	}

}
